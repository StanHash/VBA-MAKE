#ifndef WIZARDY
#define WIZARDY

#include "Extensions/Hack Installation.txt"
#include "UnitMenuDefs.event"

/*

General file layout:
	config (definitions that change the way hacks work)
	bl range hacks (hacks requiring being in bl-range) (the plan is to not have this)
	modular hook hacks: other hacks may have "optional dependency" on those
	other hacks: hacks
	modular hook lists: last so that we can safely use ifdef to build our list "dynamically"

*/

// ==================
// = WIZARDY CONFIG =
// ==================

#include "Config.event"

// ======================
// = SUPPORTING CHANGES =
// ======================

PUSH
	// Include essential fixes and autopatches
	#include "FE8EssentialFixes.event"

	// Debug Startup Screen
	#ifdef __DEBUG__
		ORG 0x000AD8     // this is somewhere in the startup routine
			BL(0x01C090) // Call the debug startup menu
	#endif
POP

// =========================
// = HACKS WITHIN BL RANGE =
// =========================

// Eventually there will be none :)

PUSH; ORG FreeSpaceBLRange // defined in custom definitions
	#define inBLRange

	//Hold L to toggle Anims
	#include "QoL/LToggle/LToggle.event"

	//negative wt/crit
	#include "NegativeWStatDisplay/NegativeDisplay.event"

	//clears the gamble/lunge/mercy when cancelling out of attack menu
	Unset_Attack_Flag:
		#incbin "SkillSystem/Internals/UnsetAttackFlag.dmp"

	#undef inBLRange
POP

// ==============================
// = FREE SPACE OUT OF BL RANGE =
// ==============================

// Core hooks (other hacks will depend on those)
#include "Hooks/MSG/InstallCore.event"
#include "Hooks/MSG/InstallHelpers.event"
#include "Hooks/MSG/Extentions/SkillSystem.event"
#include "Hooks/IconRework/IconRework.event" // Allows using standard Icon routines to draw skill icons
#include "Hooks/CPopupRework/PopupRework.event" // Allows to expand on vanilla popups by adding components
#include "Hooks/ModLu/ModLu.event" // Modular stuff that happens on level up!
#include "Hooks/MGG/MGG.event" // Modular stat getters, that also happen on level up!
#include "Hooks/BattleUnitHook/BattleUnitHook.event"
#include "Hooks/CUnitAction/UnitAction.event" // Allows action handlers to be routines instead of jumps + other stuff

// Quality of Life hacks
#include "QoL/HpBars/HpBars.event"
#include "QoL/ContemporaryTalkSupport/ContemporaryTalkSupport.event"
#include "QoL/DangerZone/DangerZone.event"
#include "QoL/FE8BattleStatsWithAnimsOff/FE8BattleStatsMasterEAFile.event"
#include "QoL/CustomGameSpeed/CustomGameSpeed.event"

// Movement Arrow doesn't update on allies
// It's annoying :( I'm not using it
// #include "QoL/MovementArrowHack/MovementArrowHack.event"

#include "PerChapterBattleQuotes/PerChapterBattleQuotes.event"

//Improved Sound Mixer
#include "ImprovedSoundMixer/SoundMixer.event"

//Casual Mode (based on Event ID 0xB0)
#include "CasualMode/CasualMode.event"

//negative stat boosts
#include "NegativeStatBoosts/NegativeStatBoosts.event"

//Dragon Veins
#include "DragonVeins/DragonVeins.event"

//Modular Stat Screen
#include "MSS/ModularStatScreen.event"

//Expanded Suspend + Debuffs
#include "SuspendDebuffs/SuspendDebuffs.event"

//Stat Screens palette by allegiance
// #include "StatScreenAllegiance/StatScreenAllegiance.event"

//menu semitransparency
#include "Misc/SemitransparencyChanges.event"

#include "Misc/PrologueSupply.event"

//Chapter names as text
#include "TextChNames/TextChNames.event"

//PC and Generic Music Hack (writes to e80000/e90000)
// #include "Misc/PCAndGenericMusic.event"

// ASMCs
#include "ASMCs/EventWriter/EventWriter.event"
#include "ASMCs/EventRescue/EventRescue.event"
#include "ASMCs/EventAddTraps/EventAddTraps.event"
#include "ASMCs/EventSendToConvoy/EventSendToConvoy.event"

//Change Sick Status to Freeze
#include "Freeze/Freeze.event"
#include "Freeze/EventFreeze.event"

#include "SkillSystem/MasterSkillInstaller.event"

#include "StatGetters/InstallStatGetters.event"

#include "UnitMenu.event"
#include "HookLists.event"

#endif // WIZARDY
