#ifndef SKILL_SYSTEM_LEARNING
#define SKILL_SYSTEM_LEARNING

// ===================================
// = PUBLIC SKILL LEARNING FUNCTIONS =
// ===================================

// Skill Learning functions, in C!
#include "Src/SkillSystemLearning.lyn.event"

// Skill Learning ASM compat wrappers
#include "Src/SkillAdderLegacy.lyn.event"

// Compat Aliases

#ifndef SetSymbolDefined
	// SetSymbol macro as an alternative to "Name = Value" (for backwards/ColorzCore compatibility)

	#define SetSymbolDefined
	#define SetSymbol(__aName, __aValue) "PUSH; ORG (__aValue); __aName:; POP"
#endif // SetSymbolDefined

SetSymbol(SkillAdder, SkillAdderLegacy-1)

// ========================
// = SKILL LEARNING HOOKS =
// ========================

{

#include "Src/SkillLearnerHook.lyn.event"
#include "Src/UnitLoadingHook.lyn.event"

PUSH
	// let 203e884 + charnum*10 = skill area (bytes 1,2,3,4 NOT 0 tho)

	//This was done through trial and error.... 

	//PROBLEM: skills 1 and 2 get kept along with loss count

	/*
	ORG $A44C8 // bwl
		SHORT $4770 // bx lr

	ORG $A4534 // bwl
		SHORT $4770 // bx lr

	ORG $A41C8 // seems to be saving/loading
		SHORT $4770 // bx lr

	ORG $A421C // same here
		SHORT $4770 // bx lr
	*/

	ORG $A474C
		SHORT $4770 // bx lr

	ORG $A478C
		SHORT $4770 // bx lr

	ORG $A4A34
		SHORT $4770 // bx lr

	// ORG $a4cfc //breaks at credits
		// SHORT $4770 // bx lr

	ORG $A464C //only save 1 byte when dying (as opposed to 3)
		BYTE 1

	ORG $A4140
		SHORT 0 //nop the 0x200000

	ORG $76018
		jumpToHack(SkillLearnerHook)

	ORG $17EF4
		jumpToHack(UnitLoadingHook)

POP

}

#endif // SKILL_SYSTEM_LEARNING
