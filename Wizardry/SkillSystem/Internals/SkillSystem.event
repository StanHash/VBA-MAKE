// Skill System replacing favouritism stat
#include "Repointbuffer.event"
#include "FE8WeaponRankOnLevelup/FE8WeaponRankOnLevelupEA.txt"

// =================================
// = PUBLIC SKILL SYSTEM FUNCTIONS =
// =================================

// Core Skill System, now in C!
#include "SkillSystemCore.lyn.event"

// ASM Wrappers for compat and stuff
#include "SkillGetter.lyn.event"
#include "NihilTester.lyn.event"
#include "SkillDescGetter.lyn.event"
#include "SkillAdderLegacy.lyn.event"

// SetSymbol macro as an alternative to "Name = Value" (for backwards/ColorzCore compatibility)

#ifndef SetSymbolDefined
	#define SetSymbolDefined
	#define SetSymbol(__aName, __aValue) "PUSH; ORG (__aValue); __aName:; POP"
#endif // SetSymbolDefined

// for-compatibility-and-without-thumb-bit aliases

SetSymbol(SkillTester,     NihilTester-1)
SetSymbol(Skill_Getter,    SkillGetter-1)
SetSymbol(SkillDescGetter, SkillDescHelpTextLadder-1)
SetSymbol(SkillAdder,      SkillAdderLegacy-1)

DefaultSkillDesc:
	SHORT SS_SkillsDefaultRText

NegatedSkills: //comment or uncomment skills to your liking, this should come with an updated list of skills that work with nihil and are meant to
//Confirmed working and grouped by type for easier adding/removing from the NegatedSkills list
//please note that I have only tested one or two skills of each group so if there is any issue with any of them please let me know
BYTE VantageID VantagePlusID DesperationID WrathID//if hp < 50%
BYTE SwordbreakerID LancebreakerID AxebreakerID BowbreakerID TomebreakerID//breaker
BYTE SwordfaireID LancefaireID AxefaireID BowfaireID TomefaireID//faire
BYTE DuelistsBlowID DeathBlowID DartingBlowID WardingBlowID CertainBlowID ArmoredBlowID//blow
BYTE ElbowRoomID NaturalCoverID//terrain dependant
BYTE QuickDrawID//when initiating attack
BYTE StrongRiposteID PatienceID PursuitID//when under attack
BYTE CounterID CounterMagicID//counter
BYTE SureShotID IgnisID ColossusID ImpaleID PaviseID AegisID AstraID SolID LunaID AetherID AdeptID LethalityID//Astra and friends aka Stat(/2)% activation
BYTE SolidarityID MaleficAuraID VoiceOfPeaceID IntimidateID AnathemaID//auras that affect the one that makes them
BYTE LifetakerID GaleforceID DespoilID//after defeating enemy
BYTE SavageBlowID//after combat, prevents activating but not effects if it was already activated
BYTE SealStrID SealSklID SealSpdID SealLukID SealDefID SealResID//seal
BYTE CritUpID WaryFighterID FrenzyID MiracleID LifeAndDeathID TantivyID FocusID FieryBloodID WindDiscipleID HawkeyeID LightWeightID KillingMachineID CriticalForceID ChivalryID PragmaticID OpportunistID TrampleID //other combat skills
BYTE MoonbowID//charge up skills, I don't really know how they work so I don't know if this prevents them from getting charge or lossing it or not, it does prevent moonbow from triggering
BYTE DownWithArchID
BYTE LuckySevenID OddRhythmID EvenRhythmID QuickBurnID SlowBurnID//turn based boosts
BYTE BracingStanceID DartingStanceID FierceStanceID KestrelStanceID MirrorStanceID ReadyStanceID SteadyStanceID SturdyStanceID SwiftStanceID WardingStanceID SpectrumStanceID // Stance skills (add stats if under attack)
BYTE ExpertiseID
BYTE SlayerID NullifyID //effectiveness stuff
BYTE BlackMagicID
/*
//NOT WORKING (or they should not be affected by nihil)
BYTE ProvokeID//this is kinda it's own thing really (works)
BYTE MercyID LungeID GambleID CaptureID//commands, not working, if you want to you can make a test for nihil in the target routine and make it not a valid target if they have nihil
BYTE ShoveID SmiteID//commands that do not initiate a fight, same as above but I felt they should be another group
BYTE StaffSavantID BowRangeUpID//range skills, not working, if you really want to you can edit the targeting routine to make an enemy with nihil untargetable if they are outside the range you would have without the skill
BYTE RallyStrID RallyMagID RallySklID RallySpdID RallyLukID RallyDefID RallyResID RallyMovID RallySpectrumID//not even tested, they have no reason to be negated
BYTE SpurStrID SpurMagID SpurSpdID SpurDefID SpurResID//spur, same as rally
BYTE UpWithArchID DemoiselleID GentilhommeID InspirationID CharmID AmaterasuID CamaraderieID LilysPoiseID BondID//auras that don't affect the one that makes them, so same as rally
BYTE DisciplineID ParagonID ArmsthriftID CantoPlusID//after battle, probably not working and probably shouldn't be nullified anyway
BYTE CelerityID ReliefID LockTouchID LiveToServeID NihilID PersonalityID NiceThighsID SummonID DanceID CunningID DragonsBloodID AcrobatID PassID CantoID RenewalID//other, can't be affected
BYTE RightfulArchID RightfulKingID RightfulGodID//Rightful skills shouldn't really be checked by nihil since any skill that's going to be affected by them should already be nullified

//TO DO:
BYTE SaviorID//works, but changes are not displayed in the pre-battle numbers (they ARE updated when the combat begins tho)
BYTE ForeignPrincessID
*/
BYTE 0 //terminator

// ==================
// = TRUE INTERNALS =
// ==================

{

#include "SkillLearnerHook.lyn.event"

PUSH
	// let 203e884 + charnum*10 = skill area (bytes 1,2,3,4 NOT 0 tho)

	//This was done through trial and error.... 

	//PROBLEM: skills 1 and 2 get kept along with loss count

	/*
	ORG $A44C8 // bwl
		SHORT $4770 // bx lr

	ORG $A4534 // bwl
		SHORT $4770 // bx lr

	ORG $A41C8 // seems to be saving/loading
		SHORT $4770 // bx lr

	ORG $A421C // same here
		SHORT $4770 // bx lr
	*/

	ORG $A474C
		SHORT $4770 // bx lr

	ORG $A478C
		SHORT $4770 // bx lr

	ORG $A4A34
		SHORT $4770 // bx lr

	// ORG $a4cfc //breaks at credits
		// SHORT $4770 // bx lr

	ORG $A464C //only save 1 byte when dying (as opposed to 3)
		BYTE 1

	ORG $A4140
		SHORT 0 //nop the 0x200000

	ORG $76018
		jumpToHack(SkillLearnerHook)

	// now managed by Icon Rework (see Engine Hacks/IconRework) -Stan
	// ORG $3730
		// jumpToHack(AlternateIconPopup)

	ORG $75D64
		jumpToHack(AnimsOnPopupHack)

	ORG $17EF4
		jumpToHack(AddSkillsOnLoad)

	ORG $2B3EC
		jumpToHack(Rerun_Battle_Calcs)

	ORG $22862
		BL(Unset_Attack_Flag) // this is in masterhackinstaller

	ORG $18680
		jumpToHack(Unset_Attack_Flag_2)

POP

}

ALIGN 4
AnimsOnPopupHack:
#include "Animsonhack75ca8.lyn.event"
WORD LearnedSkillText

AddSkillsOnLoad:
#incbin "Unitloading.dmp"
POIN LevelUpSkillTable
POIN SkillAdder
POIN ChargeupTable
POIN Skill_Getter

RTextLoop:
#incbin "Rtextloop.dmp"
POIN Skill_Getter

Rerun_Battle_Calcs:
#incbin "RerunBattleCalcs.dmp"

Unset_Attack_Flag_2:
#incbin "ClearAttackFlag.dmp"

#include "LevelPopups.event"
#include "MapAnimsRoutines.event"
#include "Popupdisplayroutines.event"
#include "HPHealing.event"
